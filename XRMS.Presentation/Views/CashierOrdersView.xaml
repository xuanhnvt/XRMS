<UserControl x:Class="XRMS.Presentation.Views.CashierOrdersView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:XRMS.Presentation.Views"
             mc:Ignorable="d" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:meffed="http:\\www.codeplex.com\MEFedMVVM"
             xmlns:DependencyProperties="clr-namespace:XRMS.Presentation.DependencyProperties"
             xmlns:ValueConverters="clr-namespace:XRMS.Presentation.ValueConverters"
             xmlns:UserControls="clr-namespace:XRMS.Presentation.UserControls"
             Height="Auto" Width="Auto"
             Background="{DynamicResource PageBackgroundBrush}"
             Foreground="{DynamicResource PageForegroundBrush}"
             meffed:ViewModelLocator.ViewModel="CashierOrdersViewModel">

    <UserControl.Resources>

        <!-- TableStateColumnTemplate -->
        <DataTemplate x:Key="TableStateColumnTemplate">
            <Image Source="{Binding Path=State, Converter={StaticResource TableStateConverter}, Mode=Default}" Width="24" Height="24"/>
        </DataTemplate>

        <!-- OrderLockColumnTemplate -->
        <DataTemplate x:Key="OrderLockColumnTemplate">
            <StackPanel Orientation="Horizontal" ToolTip="{Binding Path=LockKeeper.Permission.Role}" Visibility="{Binding LockState, Converter={StaticResource BoolToVisibilityConv}, ConverterParameter=True}">
                <Image Source="../Images/Locker.ico" Margin="5,0,0,0" Width="32" Height="32" VerticalAlignment="Center"/>
                <TextBlock Text="{Binding Path=LockKeeper.Fullname}" Margin="10,0,0,0" VerticalAlignment="Center"/>
            </StackPanel>
        </DataTemplate>

        <Storyboard x:Key="ExpandingStoryboard">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="LeftPanel" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="250" KeySpline="0.681,0,0,1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="LeftPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="LeftPanel" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:0.5" Value="0.1"/>
                <SplineDoubleKeyFrame KeyTime="00:00:0.7" Value="0.5"/>
                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="1" KeySpline="0.705,0,0,1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnExpand" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnContract" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="LeftPanel" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0,0,0,0"/>
                <SplineThicknessKeyFrame KeyTime="00:00:01" Value="0,0,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ContractingStoryboard">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="LeftPanel" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="250" KeySpline="0,0,1,1"/>
                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0" KeySpline="0.602,0,0,1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="LeftPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="LeftPanel" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="00:00:0.3" Value="0.5"/>
                <SplineDoubleKeyFrame KeyTime="00:00:0.5" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0" KeySpline="0.705,0,0,1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnContract" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnExpand" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="LeftPanel" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0,0,0,0"/>
                <SplineThicknessKeyFrame KeyTime="00:00:01" Value="0,0,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>



        <!-- Storyboard for historical order list -->
        <Storyboard x:Key="ExpandingHisOrderStoryboard">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RightPanel" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="310" KeySpline="0.681,0,0,1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RightPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RightPanel" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:0.5" Value="0.1"/>
                <SplineDoubleKeyFrame KeyTime="00:00:0.7" Value="0.5"/>
                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="1" KeySpline="0.705,0,0,1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnExpandHisOrder" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnContractHisOrder" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RightPanel" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0,0,0,0"/>
                <SplineThicknessKeyFrame KeyTime="00:00:01" Value="0,0,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ContractingHisOrderStoryboard">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RightPanel" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="310" KeySpline="0,0,1,1"/>
                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0" KeySpline="0.602,0,0,1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RightPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RightPanel" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="00:00:0.3" Value="0.5"/>
                <SplineDoubleKeyFrame KeyTime="00:00:0.5" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0" KeySpline="0.705,0,0,1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnContractHisOrder" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnExpandHisOrder" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RightPanel" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0,0,0,0"/>
                <SplineThicknessKeyFrame KeyTime="00:00:01" Value="0,0,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="btnExpand">
            <BeginStoryboard Storyboard="{StaticResource ExpandingStoryboard}" x:Name="ExpandingStoryboard_BeginStoryboard"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="btnContract">
            <BeginStoryboard Storyboard="{StaticResource ContractingStoryboard}" x:Name="ContractingStoryboard_BeginStoryboard1"/>
        </EventTrigger>

        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="btnExpandHisOrder">
            <BeginStoryboard Storyboard="{StaticResource ExpandingHisOrderStoryboard}" x:Name="ExpandingHisOrderStoryboard_BeginStoryboard"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="btnContractHisOrder">
            <BeginStoryboard Storyboard="{StaticResource ContractingHisOrderStoryboard}" x:Name="ContractingHisOrderStoryboard_BeginStoryboard1"/>
        </EventTrigger>
    </UserControl.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Horizontal"
                        VerticalAlignment="Stretch"
                        Background="{DynamicResource PageHeaderPanelBackgroundBrush}">
                <Image Source="../Images/Cashier.png" 
                       Width="48" Height="48"
                       Margin="10,0,0,0"
                       HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <Label Content="{Binding DisplayName}"
                       Margin="10,0,0,0"
                       Style="{DynamicResource LabelPageHeaderStyle}"/>
            </StackPanel>

            <!--Rectangle Grid.Row="1"
                       Height="2"
                       HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                       Fill="{DynamicResource PageForegroundBrush}"/-->
        </Grid>

        <Grid Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid x:Name="LeftPanel" Grid.Column="0" Width="0" Visibility="Visible">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Tables Status -->
                <Border Grid.Row="0"
                        Margin="0,5,0,5"
                        Background="{DynamicResource SectionBackgroundBrush}"
                        BorderBrush="{DynamicResource SectionForegroundBrush}"
                        BorderThickness="2">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" HorizontalAlignment="Stretch" Background="{DynamicResource SectionHeaderPanelBackgroundBrush}">
                            <Label Content="Tables Status"
                                   Style="{DynamicResource LabelSectionHeaderStyle}"
                                   Margin="5" Width="150"/>
                            <Button Style="{DynamicResource RefreshButtonStyle}"
                                    Width="24" Height="24"
                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                    Command="{Binding RefreshTablesCommand}"
                                    ToolTip="Click to refresh"/>
                        </Grid>

                        <ListView x:Name="ListViewOfTables" Grid.Row="1"
                                  ItemsSource="{Binding TableList}" SelectedItem="{Binding SelectedTable}"
                                  Margin="0,0,0,5" Width="Auto" Height="Auto"
                                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                  Background="Transparent"
                                  BorderBrush="Transparent" BorderThickness="2" Opacity="1"
                                  IsSynchronizedWithCurrentItem="True"
                                  SelectionMode="Single"
                                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                                  ScrollViewer.HorizontalScrollBarVisibility="Visible">
                            <ListView.View>
                                <GridView >
                                    <GridViewColumn Header="State"
                                                    CellTemplate="{StaticResource TableStateColumnTemplate}"
                                                    Width="40"/>
                                    <GridViewColumn Header="Name"
                                                    DisplayMemberBinding="{Binding Path=Name}"
                                                    Width="100"/>
                                    <GridViewColumn Header="Capacity"
                                                    DisplayMemberBinding="{Binding Path=Capacity}"
                                                    Width="75"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </Border>
            </Grid>

            <Grid Grid.Column="1">
                <Button x:Name="btnExpand" Content="&gt;&gt;"
                        Style="{DynamicResource ButtonTransparentStyle}"
                        Height="30" 
                        VerticalAlignment="Center" HorizontalAlignment="Stretch"
                        FlowDirection="LeftToRight"
                        ToolTip="Click to see Product Groups"/>
                <Button x:Name="btnContract" Content="&lt;&lt;"
                        Style="{DynamicResource ButtonTransparentStyle}"
                        Height="30" 
                        VerticalAlignment="Center" HorizontalAlignment="Stretch"
                        FlowDirection="LeftToRight"
                        Visibility="Hidden"/>
            </Grid>
            <Grid Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="510"/>
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <!-- Orders List -->
                <Border Grid.Column="0"
                    Margin="0,5,5,5"
                    Background="{DynamicResource SectionBackgroundBrush}"
                    BorderBrush="{DynamicResource SectionForegroundBrush}" BorderThickness="2">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" HorizontalAlignment="Stretch" Background="{DynamicResource SectionHeaderPanelBackgroundBrush}">
                            <Label Content="Search Table:"
                            Style="{DynamicResource LabelSectionHeaderStyle}"
                            Margin="5" Width="Auto"/>
                            <UserControls:FilterTextUserControl x:Name="FilterTextBox"
                                                    Margin="125,0,0,0" Width="150"
                                                    HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            <Button Style="{DynamicResource RefreshButtonStyle}"
                            Width="24" Height="24"
                            HorizontalAlignment="Right" VerticalAlignment="Center"
                            Command="{Binding RefreshCommand}"
                            ToolTip="Click to refresh"/>
                        </Grid>
                        <ListView x:Name="ListViewOfItems" Grid.Row="1"
                              ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem}"
                              Margin="0,0,0,5" Width="Auto" Height="Auto"
                              HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Background="Transparent"
                              BorderBrush="Transparent" BorderThickness="2" Opacity="1"
                              IsSynchronizedWithCurrentItem="True"
                              SelectionMode="Single"
                              ScrollViewer.VerticalScrollBarVisibility="Auto"
                              ScrollViewer.HorizontalScrollBarVisibility="Visible">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding SelectItemCommand}" CommandParameter="{Binding ElementName=ListViewOfItems, Path=SelectedItem}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Locked by"
                                                CellTemplate="{StaticResource OrderLockColumnTemplate}"
                                                Width="120"/>
                                    <GridViewColumn Header="Code" 
                                                CellTemplate="{StaticResource OrderColumnTemplate}"
                                                Width="140"/>
                                    <GridViewColumn Header="Table" 
                                                DisplayMemberBinding="{Binding Path=Table.Name}"
                                                Width="80"/>
                                    <GridViewColumn Header="Waiter" 
                                                DisplayMemberBinding="{Binding Path=CreatorUser.Name}"
                                                Width="100"/>
                                    <GridViewColumn Header="Order Time" 
                                                DisplayMemberBinding="{Binding Path=OrderDatetimeString}"
                                                Width="110"/>
                                    <GridViewColumn Header="Edit Time" 
                                                DisplayMemberBinding="{Binding Path=EditDatetimeString}"
                                                Width="110"/>
                                    <GridViewColumn Header="Bill Time" 
                                                DisplayMemberBinding="{Binding Path=BillDatetimeString}"
                                                Width="110"/>
                                </GridView>
                            </ListView.View>
                        </ListView>

                        <StackPanel Grid.Row="2" Orientation="Horizontal"
                                VerticalAlignment="Center"
                                Background="{DynamicResource SectionFooterPanelBackgroundBrush}">
                            <Button Content="New"
                                Margin="10,5,0,5" Width="90" Height="30"
                                Command="{Binding NewCommand}"/>
                            <Button Content="Edit"
                                Margin="10,5,0,5" Width="90" Height="30"
                                Command="{Binding EditItemCommand}"
                                CommandParameter="{Binding ElementName=ListViewOfItems, Path=SelectedItem}"/>
                            <Button Content="Check out"
                                Margin="10,5,0,5" Width="90" Height="30"
                                Command="{Binding CheckoutCommand}"
                                CommandParameter="{Binding ElementName=ListViewOfItems, Path=SelectedItem}"/>
                        </StackPanel>
                    </Grid>
                </Border>



                <!-- Detail of selected order -->
                <Border Grid.Column="1"
                        Margin="0,5,0,5"
                        Background="{DynamicResource SectionBackgroundBrush}"
                        BorderBrush="{DynamicResource SectionForegroundBrush}" BorderThickness="2" HorizontalAlignment="Left" Width="510">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="2"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Stretch" Background="{DynamicResource SectionHeaderPanelBackgroundBrush}">
                            <Label Content="Order:"
                                   Style="{DynamicResource LabelSectionHeaderStyle}"
                                   Margin="5,5,5,5" Width="Auto" Height="Auto"/>
                            <Label Content="{Binding SelectedItem.Code}"
                                   Style="{DynamicResource LabelValueOnHeaderStyle}"
                                   Margin="0,5,0,5" Width="115" Height="Auto"/>
                            <Label Content="{Binding SelectedItem.Table.Name}"
                                   Style="{DynamicResource LabelValueOnHeaderStyle}"
                                   Margin="0,5,0,5" Width="70" Height="Auto"/>
                            <Label Content="Waiter:"
                                   Style="{DynamicResource LabelSectionHeaderStyle}"
                                   Margin="0,5,0,5" Width="Auto" Height="Auto"/>
                            <Label Content="{Binding SelectedItem.CreatorUser.Name}"
                                   Style="{DynamicResource LabelValueOnHeaderStyle}"
                                   Margin="0,5,0,5" Width="95" Height="Auto"/>
                            <StackPanel Margin="0,5,0,5" Orientation="Horizontal">
                                <Grid Margin="0,0,0,0" Width="15">
                                    <CheckBox Command="{Binding ShowCancelledProductCommand}" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding IsShowCancelledProduct}"/>
                                </Grid>
                                <TextBlock Text="Show All" Style="{DynamicResource TextSectionHeaderStyle}" Margin="2,0,0,0" Width="70" VerticalAlignment="Center"/>
                            </StackPanel>
                        </StackPanel>

                        <ListView Grid.Row="1"
                              ItemsSource="{Binding SelectedItem.OrderItems}"
                              Margin="0,0,0,5" Width="Auto" Height="Auto"
                              HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Background="Transparent"
                              BorderBrush="Transparent" BorderThickness="2" Opacity="1"
                              IsSynchronizedWithCurrentItem="True"
                              SelectionMode="Single"
                              ScrollViewer.VerticalScrollBarVisibility="Auto"
                              ScrollViewer.HorizontalScrollBarVisibility="Visible">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Item"
                                                    Width="150">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Source="{Binding Path=State, Converter={StaticResource OrderItemStateConverter}, Mode=Default}" VerticalAlignment="Center" Margin="0,0,0,0" Width="14" Height="14" />
                                                    <TextBlock Text="{Binding Path=ProductInfo.Name}" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Unit"
                                                    DisplayMemberBinding="{Binding ProductInfo.Unit.Name}"
                                                    Width="50"/>
                                    <GridViewColumn Header="Price"
                                                    DisplayMemberBinding="{Binding ProductInfo.Price}"
                                                    Width="60"/>
                                    <GridViewColumn Header="Quantity"
                                                    DisplayMemberBinding="{Binding Quantity}"
                                                    Width="60"/>
                                    <GridViewColumn Header="Row Price"
                                                    DisplayMemberBinding="{Binding ItemPrice}"
                                                    Width="80"/>
                                    <GridViewColumn Header="State"
                                                    DisplayMemberBinding="{Binding State}"
                                                    Width="80"/>
                                </GridView>
                            </ListView.View>
                        </ListView>

                        <Rectangle Grid.Row="2" Height="2"
                                   HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                                   Fill="{DynamicResource SectionForegroundBrush}"/>
                        <Border Grid.Row="3">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="2"/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0">
                                    <TextBlock Text="{Binding Path=SelectedItem.State, Converter={StaticResource OrderStateToStringConverter}, Mode=Default}"
                                           Style="{DynamicResource TextMainOrderStateStyle}"
                                           RenderTransformOrigin="0.5,0.5">
                                        <TextBlock.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="-45"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </Grid>
                                <Rectangle Grid.Column="1" Width="2"
                                           HorizontalAlignment="Left" VerticalAlignment="Stretch"
                                           Fill="{DynamicResource SectionForegroundBrush}"/>
                                <Border Grid.Column="2" IsEnabled="True">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                                            <Label Content="Subtotal Price:" Style="{DynamicResource LabelNameStyle}" Width="140"/>
                                            <Label Content="{Binding SelectedItem.SubTotalPrice, Converter={StaticResource PriceConverter}}"
                                                   Style="{DynamicResource LabelValueStyle}"
                                                   Margin="5,0,0,0" Width="80"/>
                                        </StackPanel>

                                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                                            <Label Content="VAT (10%):" Style="{DynamicResource LabelNameStyle}" Width="140"/>
                                            <Label Content="{Binding SelectedItem.VatPrice, Converter={StaticResource PriceConverter}}"
                                                   Style="{DynamicResource LabelValueStyle}"
                                                   Margin="5,0,0,0" Width="80"/>
                                            <Grid Margin="5,0,0,0" Width="60">
                                                <CheckBox Command="{Binding EnableVatCommand}" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding SelectedItem.VatEnable}"/>
                                            </Grid>
                                        </StackPanel>

                                        <StackPanel Grid.Row="2" Orientation="Horizontal">
                                            <Label Content="Service Charge:" Style="{DynamicResource LabelNameStyle}" Width="140"/>
                                            <Label Content="{Binding SelectedItem.ServiceCharge, Converter={StaticResource PriceConverter}}"
                                                   Style="{DynamicResource LabelValueStyle}"
                                                   Margin="5,0,0,0" Width="80"/>
                                            <Grid Margin="5,0,0,0" Width="60">
                                                <Button Content="..."
                                                        Width="50"
                                                        HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        Command="{Binding ServiceChargeCommand}"
                                                        CommandParameter="{Binding ElementName=ListViewOfItems, Path=SelectedItem}"/>
                                            </Grid>
                                        </StackPanel>

                                        <StackPanel Grid.Row="3" Orientation="Horizontal">
                                            <Label Content="Discount:" Style="{DynamicResource LabelNameStyle}" Width="140"/>
                                            <Label Content="{Binding SelectedItem.DiscountPrice, Converter={StaticResource PriceConverter}}"
                                                   Style="{DynamicResource LabelValueStyle}"
                                                   Margin="5,0,0,0" Width="80"/>
                                            <Grid Margin="5,0,0,0" Width="60">
                                                <ComboBox ItemsSource="{Binding DiscountList}"
                                                          Width="50" HorizontalAlignment="Center" VerticalAlignment="Bottom"
                                                  DisplayMemberPath="Display" 
                                                  SelectedValuePath="Value"
                                                  SelectedValue="{Binding ElementName=ListViewOfItems, Path=SelectedItem.DiscountPercent}" Margin="5,0,5,3"
                                                          IsEnabled="{Binding ElementName=ListViewOfItems, Path=SelectedItem.IsBilled, Converter={StaticResource InverseBooleanConverter}}">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="SelectionChanged">
                                                            <i:InvokeCommandAction Command="{Binding SelectDiscountCommand}"
                                                                                   CommandParameter="{Binding ElementName=ListViewOfItems, Path=SelectedItem}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </ComboBox>
                                            </Grid>
                                        </StackPanel>

                                        <!--TextBlock Grid.Row="1" Grid.Column="0" Text="Common Discount:" VerticalAlignment="Center" Margin="20,0,0,0" Height="Auto" Width="Auto" TextWrapping="Wrap" FontSize="20"/>
                                <TextBlock Grid.Row="1" Grid.Column="1" x:Name="txbDiscount" Text="0" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="20,0,0,0" Height="Auto" Width="Auto" TextWrapping="Wrap" Foreground="#FFFFAA00" FontFamily="Arial" FontSize="24" />
                                <CheckBox Grid.Row="1" Grid.Column="2" x:Name="ckbDiscountCheck" VerticalAlignment="Center" Margin="10,0,0,0" Height="30" Width="30"/-->

                                        <GridSplitter Grid.Row="4" Margin="0,5,0,5" Height="2" HorizontalAlignment="Stretch" IsEnabled="False" Background="Black"/>

                                        <StackPanel Grid.Row="5" Orientation="Horizontal">
                                            <Label Content="Total Price:" Style="{DynamicResource LabelNameStyle}" Width="140"/>
                                            <Label Content="{Binding SelectedItem.TotalPrice, Converter={StaticResource PriceConverter}}"
                                                   Style="{DynamicResource LabelValueStyle}"
                                                   Margin="5,0,0,0" Width="80"/>
                                        </StackPanel>

                                        <StackPanel Grid.Row="6" Orientation="Horizontal">
                                            <Label Content="Cash:" Style="{DynamicResource LabelNameStyle}" Width="140"/>
                                            <Label Content="{Binding SelectedItem.Cash, Converter={StaticResource PriceConverter}}"
                                                   Style="{DynamicResource LabelValueStyle}"
                                                   Margin="5,0,0,0" Width="80"/>
                                        </StackPanel>

                                        <StackPanel Grid.Row="7" Orientation="Horizontal">
                                            <Label Content="Change:" Style="{DynamicResource LabelNameStyle}" Width="140"/>
                                            <Label Content="{Binding SelectedItem.Change, Converter={StaticResource PriceConverter}}"
                                                   Style="{DynamicResource LabelValueStyle}"
                                                   Margin="5,0,0,0" Width="80"/>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                        <DockPanel Grid.Row="4" Background="{DynamicResource SectionFooterPanelBackgroundBrush}">
                            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal"
                                HorizontalAlignment="Right" VerticalAlignment="Center">
                                <Label Content="Print Count:"
                                       Style="{DynamicResource LabelSectionFooterStyle}"
                                       Margin="5" Width="Auto" Height="Auto"/>
                                <Label Content="{Binding SelectedItem.PrintCount}"
                                       Style="{DynamicResource LabelValueOnFooterStyle}"
                                       Margin="0,5,5,5" Width="Auto" Height="Auto"/>
                            </StackPanel>

                            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center">
                                <Button Content="Cancel"
                                Margin="10,5,0,5" Width="90" Height="30"
                                Command="{Binding CancelCommand}"
                                CommandParameter="{Binding ElementName=ListViewOfItems, Path=SelectedItem}"/>
                                <Button Content="Print"
                                Margin="10,5,0,5" Width="90" Height="30"
                                Command="{Binding PrintCommand}"
                                CommandParameter="{Binding ElementName=ListViewOfItems, Path=SelectedItem}"/>
                                <Button Content="Bill"
                                Margin="10,5,0,5" Width="90" Height="30"
                                Command="{Binding BillCommand}"
                                CommandParameter="{Binding ElementName=ListViewOfItems, Path=SelectedItem}"/>
                            </StackPanel>
                        </DockPanel>

                    </Grid>
                </Border>
                <Grid Grid.Column="2">
                    <Button x:Name="btnExpandHisOrder" Content="&lt;&lt;"
                            Style="{DynamicResource ButtonTransparentStyle}"
                            Height="30"
                            VerticalAlignment="Center" HorizontalAlignment="Stretch"
                            FlowDirection="LeftToRight"
                            ToolTip="Click to see order time"/>
                    <Button x:Name="btnContractHisOrder" Content="&gt;&gt;"
                            Style="{DynamicResource ButtonTransparentStyle}"
                            Height="30"
                            VerticalAlignment="Center" HorizontalAlignment="Stretch"
                            FlowDirection="LeftToRight" Visibility="Hidden"/>
                </Grid>
                <Grid x:Name="RightPanel" Grid.Column="3" Width="0" Visibility="Visible">
                    <Border Grid.Row="0"
                        Margin="0,5,0,5"
                        Background="{DynamicResource SectionBackgroundBrush}"
                        BorderBrush="{DynamicResource SectionForegroundBrush}" BorderThickness="2">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" HorizontalAlignment="Stretch" Background="{DynamicResource SectionHeaderPanelBackgroundBrush}">
                                <Label Content="Events"
                                       Style="{DynamicResource LabelSectionHeaderStyle}"
                                       Margin="5" Width="200" Height="Auto"/>
                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Right" Orientation="Horizontal">
                                    <Label Content="Group by:"
                                           Style="{DynamicResource LabelSectionHeaderStyle}"
                                           Width="Auto"
                                           HorizontalContentAlignment="Right"/>
                                    <Grid Margin="5,0,0,0" Width="Auto">
                                        <ComboBox Width="100" HorizontalAlignment="Left" VerticalAlignment="Center"
                                                  ItemsSource="{Binding GroupByList}"
                                                  IsSynchronizedWithCurrentItem="True"
                                                  DisplayMemberPath="Display"
                                                  SelectedItem="{Binding SelectedGroupBy}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="SelectionChanged">
                                                    <i:InvokeCommandAction Command="{Binding SelectGroupByCommand}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ComboBox>
                                    </Grid>
                                </StackPanel>
                            </Grid>
                            <!--ItemsSource="{Binding Path=Groups, Source={StaticResource ReportEditionOrderItemListStyle}}"-->
                            <ListView Grid.Row="1"
                                      ItemsSource ="{Binding ReportEditionOrderItemList}"
                            Margin="0,0,0,5" Width="Auto" Height="Auto"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            BorderBrush="Transparent" BorderThickness="2"
                            Background="Transparent" Foreground="Black" Opacity="1"
                            SelectionMode="Single"
                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                            ScrollViewer.HorizontalScrollBarVisibility="Visible">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Editting" Width="50">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal" ToolTip="{Binding EditionInfo}">
                                                        <TextBlock Text="{Binding EditionCounter}" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Header="Item" Width="140"
                                                        DisplayMemberBinding="{Binding ProductName}"/>
                                        <GridViewColumn Header="Action" Width="50">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <TextBlock Text="{Binding Path=EditionType, Converter={StaticResource ProductEditionTypeConverter}, Mode=Default}" HorizontalAlignment="Left" VerticalAlignment="Stretch" TextAlignment="Left"/>
                                                    </Grid>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Header="Quantity" Width="55"
                                                        DisplayMemberBinding="{Binding EdittedQuantity}"/>

                                    </GridView>
                                </ListView.View>

                                <!--ListView.View>
                                    <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle}">
                                        <GridViewColumn Header="Edition" Width="45"
                                                        DisplayMemberBinding="{Binding Name}"/>
                                        <GridViewColumn Header="Item" Width="130" DependencyProperties:SortableListBehaviour.SortValue="Name">
                                            <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <ItemsControl ItemsSource="{Binding Items}">
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Name}"/>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Action" Width="50">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ItemsControl ItemsSource="{Binding Items}">
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding EditionType}"/>
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                    </ItemsControl>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Edit Quant." Width="75">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ItemsControl ItemsSource="{Binding Items}">
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding EdittedQuantity}"/>
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                    </ItemsControl>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View-->

                                <ListView.GroupStyle>
                                    <GroupStyle>
                                        <GroupStyle.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock FontWeight="Bold" FontSize="14" Text="{Binding Name}"/>
                                            </DataTemplate>
                                        </GroupStyle.HeaderTemplate>
                                    </GroupStyle>
                                </ListView.GroupStyle>
                            </ListView>

                            <StackPanel Grid.Row="2" Orientation="Horizontal"
                                VerticalAlignment="Center"
                                Background="{DynamicResource SectionFooterPanelBackgroundBrush}">
                            </StackPanel>
                        </Grid>
                    </Border>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
