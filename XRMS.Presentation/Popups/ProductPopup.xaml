<Window x:Class="XRMS.Presentation.Popups.ProductPopup"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:XRMS.Presentation.Popups"
        mc:Ignorable="d"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:Cinch="clr-namespace:Cinch;assembly=Cinch.WPF"
        WindowStartupLocation="CenterOwner"
        Title="Product View" Height="700" Width="860"
        Background="{DynamicResource PageBackgroundBrush}"
        Foreground="{DynamicResource PageForegroundBrush}"
        ResizeMode="NoResize">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0"
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              Background="{DynamicResource PageBackgroundBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch"
                        Background="{DynamicResource PageHeaderPanelBackgroundBrush}">
                <Image Source="../Images/Product.png"
                       Width="48" Height="48"
                       Margin="10,0,0,0"
                       HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <Label Content="{Binding DisplayName}"
                       Margin="10,0,0,0"
                       Style="{DynamicResource LabelPageHeaderStyle}"/>
            </StackPanel>

            <!--Rectangle Grid.Row="1"
                       Height="2"
                       HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                       Fill="{DynamicResource PageForegroundBrush}"/-->
        </Grid>

        <GroupBox Grid.Row="1" Margin="20,0,20,5" Width="Auto" Height="Auto">
            <GroupBox.Header>
                <Label Content="Product Information"/>
            </GroupBox.Header>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" Margin="10,10,10,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="6" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="30" />
                    </Grid.RowDefinitions>

                    <!-- Code -->
                    <Label Grid.Row="0" Grid.Column="0"
                           HorizontalAlignment="Right"
                           Content="Code: "/>
                    <TextBox Grid.Row="0" Grid.Column="2"
                             x:Name="CodeBox"
                             Text="{Binding Path=Item.Code, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                             Validation.ErrorTemplate="{x:Null}" />
                    <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
                               Text="{Binding ElementName=CodeBox, Path=(Validation.Errors).CurrentItem.ErrorContent}"
                               Style="{DynamicResource TextValidationErrorStyle}"
                               VerticalAlignment="Top" />

                    <!-- Name -->
                    <Label Grid.Row="2" Grid.Column="0"
                           HorizontalAlignment="Right"
                           Content="Name: "/>
                    <TextBox Grid.Row="2" Grid.Column="2"
                             x:Name="NameBox"
                             Text="{Binding Path=Item.Name, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                             Validation.ErrorTemplate="{x:Null}" />
                    <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3"
                               Text="{Binding ElementName=NameBox, Path=(Validation.Errors).CurrentItem.ErrorContent}"
                               Style="{DynamicResource TextValidationErrorStyle}"
                               VerticalAlignment="Top" />

                    <!-- Price -->
                    <Label Grid.Row="4" Grid.Column="0"
                           HorizontalAlignment="Right"
                           Content="Price: "/>
                    <TextBox Grid.Row="4" Grid.Column="2"
                             x:Name="PriceBox"
                             Text="{Binding Path=Item.Price, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                             Validation.ErrorTemplate="{x:Null}" />
                    <TextBlock Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3"
                               Text="{Binding ElementName=PriceBox, Path=(Validation.Errors).CurrentItem.ErrorContent}"
                               Style="{DynamicResource TextValidationErrorStyle}"
                               VerticalAlignment="Top" />

                    <!-- Description -->
                    <Label Grid.Row="6" Grid.Column="0"
                           HorizontalAlignment="Right"
                           Content="Description: "/>
                    <TextBox Grid.Row="6" Grid.Column="2"
                             x:Name="DescriptionBox"
                             Text="{Binding Path=Item.Description, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                             Validation.ErrorTemplate="{x:Null}" />
                    <TextBlock Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="3"
                               Text="{Binding ElementName=DescriptionBox, Path=(Validation.Errors).CurrentItem.ErrorContent}"
                               Style="{DynamicResource TextValidationErrorStyle}"
                               VerticalAlignment="Top" />
                </Grid>

                <Grid Grid.Column="1" Margin="10,10,10,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="6" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="30" />
                    </Grid.RowDefinitions>

                    <!-- Unit -->
                    <Label Grid.Row="0" Grid.Column="0"
                           HorizontalAlignment="Right"
                           Content="Unit: "/>
                    <ComboBox Grid.Row="0" Grid.Column="2"
                              x:Name="UnitBox"
                              ItemsSource="{Binding Path=UnitList}"
                              DisplayMemberPath="Name"
                              SelectedValuePath="Id"
                              SelectedValue="{Binding Path=Item.UnitId}"
                              Validation.ErrorTemplate="{x:Null}"/>
                    <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
                               Text="{Binding ElementName=UnitBox, Path=(Validation.Errors).CurrentItem.ErrorContent}"
                               Style="{DynamicResource TextValidationErrorStyle}"
                               VerticalAlignment="Top" />

                    <!-- Group -->
                    <Label Grid.Row="2" Grid.Column="0"
                           HorizontalAlignment="Right"
                           Content="Group: "/>
                    <ComboBox Grid.Row="2" Grid.Column="2"
                              x:Name="GroupBox"
                              ItemsSource="{Binding Path=GroupList}"
                              DisplayMemberPath="Name"
                              SelectedValuePath="Id"
                              SelectedValue="{Binding Path=Item.GroupId}"
                              Validation.ErrorTemplate="{x:Null}"/>
                    <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3"
                               Text="{Binding ElementName=GroupBox, Path=(Validation.Errors).CurrentItem.ErrorContent}"
                               Style="{DynamicResource TextValidationErrorStyle}"
                               VerticalAlignment="Top" />

                    <!-- Type of product -->
                    <Label Grid.Row="4" Grid.Column="0"
                           HorizontalAlignment="Right"
                           Content="Is Always Ready: "/>
                    <CheckBox Grid.Row="4" Grid.Column="2"
                              x:Name="IsReadyBox"
                              IsChecked="{Binding Path=Item.IsAlwaysReady, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                             Validation.ErrorTemplate="{x:Null}" />
                    <TextBlock Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3"
                               Text="{Binding ElementName=DescriptionBox, Path=(Validation.Errors).CurrentItem.ErrorContent}"
                               Style="{DynamicResource TextValidationErrorStyle}"
                               VerticalAlignment="Top" />
                </Grid>
            </Grid>
        </GroupBox>

        <GroupBox Grid.Row="2" Margin="20,0,20,5" Width="Auto" Height="Auto">
            <GroupBox.Header>
                <Label Content="Product Recipe"/>
            </GroupBox.Header>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="1.3*"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0"
                        Margin="10,10,0,10"
                        Background="{DynamicResource SectionBackgroundBrush}"
                        BorderBrush="{DynamicResource SectionForegroundBrush}" BorderThickness="2">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Stretch" Background="{DynamicResource SectionHeaderPanelBackgroundBrush}">
                            <Label Content="Recipe of Product:"
                                   Style="{DynamicResource LabelSectionHeaderStyle}"
                                   Margin="5,5,0,5" Width="155" Height="Auto"/>
                            <Label Content="{Binding Path=Item.Name}"
                                   Style="{DynamicResource LabelSectionHeaderStyle}"
                                   Margin="0,5,0,5" Width="155" Height="Auto"/>
                        </StackPanel>
                        <ListView x:Name="ListViewOfRecipeItems" Grid.Row="1"
                                  ItemsSource="{Binding Item.Recipes}"
                                  Margin="0,0,0,5" Width="Auto" Height="Auto"
                                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                  Background="Transparent"
                                  BorderBrush="Transparent" BorderThickness="2" Opacity="1"
                                  IsSynchronizedWithCurrentItem="True"
                                  SelectionMode="Single"
                                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                                  ScrollViewer.HorizontalScrollBarVisibility="Visible">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Name"
                                                    DisplayMemberBinding="{Binding MaterialInfo.Name}"
                                                    Width="180"/>
                                    <GridViewColumn Header="Amount"
                                                    DisplayMemberBinding="{Binding UsedAmount}"
                                                    Width="60"/>
                                    <GridViewColumn Header="Unit"
                                                    DisplayMemberBinding="{Binding Path=MaterialInfo.Unit.Name}"
                                                    Width="60"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </Border>
                <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Button Content="&lt;"
                            Command="{Binding AddRecipeItemCommand}"
                            CommandParameter="{Binding ElementName=ListViewOfAvailableMaterials, Path=SelectedItem}"
                            Height="20" Width="30" ToolTip="Add material into recipe."/>
                    <Button Content="&gt;"
                            Command="{Binding RemoveRecipeItemCommand}"
                            CommandParameter="{Binding ElementName=ListViewOfRecipeItems, Path=SelectedItem}"
                            Margin="0,5,0,0" Height="20" Width="30"
                            ToolTip="Remove material from recipe."/>
                </StackPanel>
                <Border Grid.Column="2"
                        Margin="0,10,10,10"
                        Background="{DynamicResource SectionBackgroundBrush}"
                        BorderBrush="{DynamicResource SectionForegroundBrush}" BorderThickness="2">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" HorizontalAlignment="Stretch" Background="{DynamicResource SectionHeaderPanelBackgroundBrush}">
                            <Label Content="Search:"
                                   Style="{DynamicResource LabelSectionHeaderStyle}"
                                   Margin="5,5,5,5" Height="Auto" Width="70"/>
                            <!--UserControls:FilterTextUserControl x:Name="FilterTextBox"
                                                        Margin="70,0,0,0" Width="120"
                                                        HorizontalAlignment="Left" VerticalAlignment="Center"
                                                        FontSize="14"/-->
                            <Label Content="Group:"
                                   Style="{DynamicResource LabelSectionHeaderStyle}"
                                   Margin="5,5,105,5" Height="Auto" Width="65"
                                   HorizontalAlignment="Right"/>
                            <ComboBox ItemsSource="{Binding Path=MaterialGroupList}"
                                      Margin="5,5,5,5" Width="100" Height="Auto"
                                      HorizontalAlignment="Right"
                                      DisplayMemberPath="Name"
                                      SelectedValuePath="Id"
                                      SelectedValue="{Binding Path=SelectedGroupId}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding SelectMaterialGroupCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                        </Grid>

                        <ListView x:Name="ListViewOfAvailableMaterials" Grid.Row="1"
                                  ItemsSource="{Binding AvailableMaterialList}" SelectedItem="{Binding SelectedMaterial}"
                                  Margin="0,0,0,5" Width="Auto" Height="Auto"
                                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                  Background="Transparent"
                                  BorderBrush="Transparent" BorderThickness="2" Opacity="1"
                                  IsSynchronizedWithCurrentItem="True"
                                  SelectionMode="Single"
                                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                                  ScrollViewer.HorizontalScrollBarVisibility="Visible">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding SelectMaterialCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Code" Width="80" 
                                                DisplayMemberBinding="{Binding Path=Code}"/>
                                    <GridViewColumn Header="Name" Width="180" 
                                                DisplayMemberBinding="{Binding Path=Name}"/>
                                    <GridViewColumn Header="Unit" Width="60" 
                                                DisplayMemberBinding="{Binding Path=Unit.Name}"/>
                                    <GridViewColumn Header="Group" Width="90"
                                                DisplayMemberBinding="{Binding Path=Group.Name}"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </Border>
            </Grid>
        </GroupBox>
        
        <StackPanel Grid.Row="3" Orientation="Horizontal"
                    VerticalAlignment="Top" HorizontalAlignment="Center">
            <Button Content="Save"
                    Margin="0,5,0,5" Width="90" Height="30"
                    Command="{Binding SaveCommand}"/>
            <Button Content="Cancel"
                    Margin="10,5,0,5" Width="90" Height="30"
                    Command="{Binding CancelCommand}"/>
            <Button Content="Mark Delete"
                    Margin="10,5,0,5" Width="90" Height="30"
                    Command="{Binding MarkDeletedCommand}"/>
        </StackPanel>
    </Grid>
</Window>
